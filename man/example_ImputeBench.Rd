% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/example_ImputeBench.R
\name{example_ImputeBench}
\alias{example_ImputeBench}
\title{Extracting an Example Imputation from the ImputeBench Protocol}
\usage{
example_ImputeBench(
  Evaluation,
  parameters = 1,
  run = 1,
  data = NULL,
  imputation_methods = c("knn", "MICE", "missF", "softImpute", "baseline"),
  imputation_indices = c(1, 2, 3, 4, 5)
)
}
\arguments{
\item{Evaluation}{The output of \code{data_ImputeBench} or \code{simulation_ImputeBench}.}

\item{parameters}{A positive integer. Indicating the number of the scenario/parameter choice that should be extracted. Default is \code{1}.}

\item{run}{A positive integer. Indicating the run that should be extracted. Default is \code{1}.}

\item{data}{A numeric matrix with possible missing entries or \code{NULL}. In the case \code{Evaulation} stems from evaluation on real data, i.e. as the output of \code{data_ImputeBench()},
the real data matrix needs to be provided via \code{data}. Default is \code{NULL}.}

\item{imputation_methods}{A vector of character strings chosen from \code{knn}, \code{MICE}, \code{missF}, \code{softImpute} and \code{median}. Indicating
the default methods that should be used to impute the data matrix. Default is \code{c("knn", "MICE", "missF", "softImpute", "baseline")}.}

\item{imputation_indices}{A vector of positive integers of the same length as \code{imputation_methods} of \code{NULL}. Needs to be provided
if \code{imputation_methods} is not \code{NULL}. The vector corresponds to the queue positions of the given default methods in the
benchmarking process. Default is \code{c(1,2,3,4,5)}.}
}
\value{
A ggplot2 plot.
}
\description{
Returning a data matrix, a mask matrix and a set of imputed matrices for a specific run and scenario/parameter choice
of either \code{simulate_ImputeBench()} or \code{data_ImputeBench()}.
}
\details{
This function extracts from the output of \code{simulate_ImputeBench()} or \code{data_ImputeBench()} a specific run of a specific
scenario or parameter choice. Integrated is also the imputation via default methods given the trained or fixed parameters in the
benchmarking protocol (in particular \code{k} of \code{knn} and \code{lambda} of \code{softImpute} are by default trained). If imputation is not wanted
one sets \code{imputation_methods} to \code{NULL}. Otherwise one needs to pass also the queue positions of the default methods. In detail,
if all default methods were set in the run of \code{simulate_ImputeBench()} or \code{data_ImputeBench()} and not additional methods were
used the queue positions are 1 for \code{knn}, 2 for \code{MICE}, 3 for \code{missF}, 4 for \code{softImpute}, 5 for the baseline method \code{baseline}.
In the case that additional methods were being benchmarked, the default methods are always at the end of the queue. Hence, their
positions are given by adding the number of methods considered. For example if all default methods are considered and 4 additional
non-default methods were being passed to say \code{simulate_ImputeBench()}, the queue position of \code{knn} is 5, that of \code{MICE} is 6, and
so on. Last, if a default method is not part of the benchmarking process, the "later" default methods are moving a place up. For
example if we consider all default methods but \code{missF} and no additional ones, the queue positions of \code{softImpute} and \code{baseline}
are now 4 and 5, respectively.
}
